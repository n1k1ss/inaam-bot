from aiogram import Dispatcher, Bot
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.enums import ParseMode

from inaam_bot_logger import logger

def register_send_request_adm_handler(dp: Dispatcher, bot: Bot):
    @dp.message(Command("send_req_adm"))
    async def send_request_adm(message: Message):
        try:
            logger.info(f"[{message.from_user.id}] {message.from_user.first_name} –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–¥–º–∏–Ω–∞ üë®‚Äçüíº")
            await message.delete()
            await bot.send_message(7167370884, f"<a href='tg://user?id={message.from_user.id}'><b>{message.from_user.first_name}</b></a>\n\n<i>–ó–∞–ø—Ä–æ—Å –Ω–∞ –∞–¥–º–∏–Ω–∞</i> üë®‚Äçüíº\n\n<code>/addm {message.from_user.id}</code>", parse_mode=ParseMode.HTML)
            await message.answer("<b>–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω</b> ‚úÖ", parse_mode=ParseMode.HTML)
        except Exception as e:
            logger.exception(f"[{message.from_user.id}] –û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /send_req_adm {[e]}")
            await message.answer("‚ö†Ô∏è <b>–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</b>", parse_mode=ParseMode.HTML)

def register_send_request_wor_handler(dp: Dispatcher, bot: Bot):
    @dp.message(Command("send_req_wor"))
    async def send_request_wor(message: Message):
        try:
            logger.info(f"[{message.from_user.id}] {message.from_user.first_name} –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ üë®‚Äçüíª")
            await message.delete()
            await bot.send_message(7167370884, f"<a href='tg://user?id={message.from_user.id}'><b>{message.from_user.first_name}</b></a>\n\n<i>–ó–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞</i> üë®‚Äçüíª\n\n<code>/add {message.from_user.id}</code>", parse_mode=ParseMode.HTML)
            await message.answer("<b>–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω</b> ‚úÖ", parse_mode=ParseMode.HTML)
        except Exception as e:
            logger.exception(f"[{message.from_user.id}] –û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /send_req_wor [{e}]")
            await message.answer("‚ö†Ô∏è <b>–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</b>", parse_mode=ParseMode.HTML)